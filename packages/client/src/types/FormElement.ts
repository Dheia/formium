/**
 * Copyright (c) Formium, Inc. and its affiliates.
 *
 * This source code is licensed under the Business Source License found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { FormElementAction } from './FormElementAction';
/* eslint-disable @typescript-eslint/consistent-type-assertions */
export interface FormElement {
  /**
   * unique identifier
   */
  id: string;

  /**
   * title of element
   */
  title?: string;

  /**
   * administrative slug
   */
  slug: string;

  /**
   * element type
   */
  type: FormElementType;

  /**
   * is the element required
   */
  required?: boolean;

  /**
   * is the element required
   */
  requiredText?: string;

  /**
   * is the element hidden (initially)
   */
  hidden?: boolean;

  /**
   * Can the field be dynamically populated?
   */
  dynamic?: boolean;

  /**
   * The name of the dynamic parameter
   */
  dynamicParam?: string;

  /**
   * The name of the dynamic parameter
   */
  placeholder?: string;

  /**
   * Minimum value allowed in the answer, must be a positive integer.
   */
  minValue?: number;

  /**
   * Minimum number of characters allowed in the answer, must be a positive integer.
   */
  minLength?: number;

  /**
   * Initial value of element
   */
  defaultValue?: string;

  /**
   * Maximum value allowed in the answer, must be a positive integer.
   */
  maxValue?: number;

  /**
   * Maximum number of characters allowed in the answer, must be a positive integer.
   */
  maxLength?: number;

  /**
   * element description
   */
  description?: string;

  /**
   * should randomize options?
   */
  randomize?: boolean;

  /**
   * allow an other option in list
   */
  allowOther?: boolean;

  /**
   * list of items
   */
  items?: Array<string>;

  /**
   * list of logic actions
   */
  actions?: Array<FormElementAction>;

  /**
   * set of allowed upload types
   */
  uploadTypes?: Array<FormElementUploadTypes>;
}

export enum FormElementType {
  DATE = <any>'DATE',
  EMAIL = <any>'EMAIL',
  FILE = <any>'FILE',
  LONG_TEXT = <any>'LONG_TEXT',
  NUMBER = <any>'NUMBER',
  PHONE_NUMBER = <any>'PHONE_NUMBER',
  SHORT_TEXT = <any>'SHORT_TEXT',
  TIME = <any>'TIME',
  URL = <any>'URL',
  CHOICE = <any>'CHOICE',
  RADIO = <any>'RADIO',
  BOOLEAN = <any>'BOOLEAN',
  CHECKBOX = <any>'CHECKBOX',
  PAGE = <any>'PAGE',
  GROUP = <any>'GROUP',
  STAR_RATING = <any>'STAR_RATING',
  NPS = <any>'NPS',
  HIDDEN = <any>'HIDDEN',
  DROPDOWN = <any>'DROPDOWN',
  PAYMENT = <any>'PAYMENT',
}
export enum FormElementUploadTypes {
  JPG = <any>'JPG',
  GIF = <any>'GIF',
  PNG = <any>'PNG',
  PDF = <any>'PDF',
  DOC = <any>'DOC',
  DOCX = <any>'DOCX',
  XLS = <any>'XLS',
  XLSX = <any>'XLSX',
  PPT = <any>'PPT',
  PPTX = <any>'PPTX',
}
